
package ua.nure.order.server.service;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;

/**
 * This class was generated by Apache CXF 3.0.2
 * 2016-02-17T09:48:13.749+02:00
 * Generated source version: 3.0.2
 * 
 */
public final class BookService_BookServicePort_Client {

    private static final QName SERVICE_NAME = new QName("http://service.server.order.nure.ua/", "BookService");

    private BookService_BookServicePort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = BookServiceClient.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        BookServiceClient ss = new BookServiceClient(wsdlURL, SERVICE_NAME);
        BookService port = ss.getBookServicePort();  
        
        {
        System.out.println("Invoking deleteBook...");
        int _deleteBook_id = -198461211;
        try {
            ua.nure.order.entity.book.Book _deleteBook__return = port.deleteBook(_deleteBook_id);
            System.out.println("deleteBook.result=" + _deleteBook__return);

        } catch (DAOException_Exception e) { 
            System.out.println("Expected exception: DAOException has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getBook...");
        int _getBook_id = 26001817;
        try {
            ua.nure.order.entity.book.Book _getBook__return = port.getBook(_getBook_id);
            System.out.println("getBook.result=" + _getBook__return);

        } catch (DAOException_Exception e) { 
            System.out.println("Expected exception: DAOException has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking updateBookCount...");
        int _updateBookCount_id = 738513392;
        int _updateBookCount_count = 957733368;
        try {
            boolean _updateBookCount__return = port.updateBookCount(_updateBookCount_id, _updateBookCount_count);
            System.out.println("updateBookCount.result=" + _updateBookCount__return);

        } catch (DAOException_Exception e) { 
            System.out.println("Expected exception: DAOException has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking listBooks...");
        java.lang.String _listBooks_pattern = "_listBooks_pattern1471395643";
        java.util.List<ua.nure.order.entity.book.Book> _listBooks__return = port.listBooks(_listBooks_pattern);
        System.out.println("listBooks.result=" + _listBooks__return);


        }
        {
        System.out.println("Invoking updateBook...");
        ua.nure.order.entity.book.Book _updateBook_book = new ua.nure.order.entity.book.Book();
        _updateBook_book.setId(Integer.valueOf(-560270700));
        _updateBook_book.setTitle("Title686113975");
        java.util.List<java.lang.String> _updateBook_bookAuthor = new java.util.ArrayList<java.lang.String>();
        java.lang.String _updateBook_bookAuthorVal1 = "_updateBook_bookAuthorVal997334433";
        _updateBook_bookAuthor.add(_updateBook_bookAuthorVal1);
        _updateBook_book.getAuthor().addAll(_updateBook_bookAuthor);
        _updateBook_book.setIsbn("Isbn-2131889097");
        _updateBook_book.setPrice(0.7178207201501335);
        ua.nure.order.entity.book.Category _updateBook_bookCategory = ua.nure.order.entity.book.Category.ACTION;
        _updateBook_book.setCategory(_updateBook_bookCategory);
        _updateBook_book.setCount(1060740510);
        try {
            ua.nure.order.entity.book.Book _updateBook__return = port.updateBook(_updateBook_book);
            System.out.println("updateBook.result=" + _updateBook__return);

        } catch (DAOException_Exception e) { 
            System.out.println("Expected exception: DAOException has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking addBook...");
        ua.nure.order.entity.book.Book _addBook_book = new ua.nure.order.entity.book.Book();
        _addBook_book.setId(Integer.valueOf(1504660246));
        _addBook_book.setTitle("Title-1653251047");
        java.util.List<java.lang.String> _addBook_bookAuthor = new java.util.ArrayList<java.lang.String>();
        java.lang.String _addBook_bookAuthorVal1 = "_addBook_bookAuthorVal-2117340146";
        _addBook_bookAuthor.add(_addBook_bookAuthorVal1);
        _addBook_book.getAuthor().addAll(_addBook_bookAuthor);
        _addBook_book.setIsbn("Isbn1070197010");
        _addBook_book.setPrice(0.007504858006748494);
        ua.nure.order.entity.book.Category _addBook_bookCategory = ua.nure.order.entity.book.Category.LOVE_NOVEL;
        _addBook_book.setCategory(_addBook_bookCategory);
        _addBook_book.setCount(359419286);
        try {
            ua.nure.order.entity.book.Book _addBook__return = port.addBook(_addBook_book);
            System.out.println("addBook.result=" + _addBook__return);

        } catch (DAOException_Exception e) { 
            System.out.println("Expected exception: DAOException has occurred.");
            System.out.println(e.toString());
        }
            }

        System.exit(0);
    }

}
